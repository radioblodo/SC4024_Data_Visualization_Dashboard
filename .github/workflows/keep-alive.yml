name: Keep Streamlit App Alive

on:
  schedule:
    - cron: "*/15 * * * *" # every 15 minutes (UTC)
  workflow_dispatch:

jobs:
  ping:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Wake + health-check
        run: |
          URL_BASE="https://olympicsvisualization4024.streamlit.app"   # <-- your app
          URL_HEALTH="$URL_BASE/_stcore/health"
          echo "Pinging at $(date -u)"
          # jitter to avoid thundering herd
          sleep $((RANDOM % 45))

          # 1) Gentle nudge (do NOT follow redirects here; just trigger traffic)
          curl -sS --max-time 30 -A "keepalive-bot/1.0" "$URL_BASE" -o /dev/null || true

          # 2) Give the instance a moment to spin
          sleep 8

          # 3) Health check loop: expect HTTP 200 and body 'ok'
          ATTEMPTS=6
          DELAY=10
          ok=0
          for i in $(seq 1 $ATTEMPTS); do
            CODE=$(curl -sS --max-time 20 -w "%{http_code}" -o health.out "$URL_HEALTH" || echo "000")
            BODY=$(cat health.out || true)
            echo "Attempt $i/$ATTEMPTS -> code=$CODE body='$BODY'"
            if [ "$CODE" = "200" ] && [ "$BODY" = "ok" ]; then
              ok=1
              break
            fi
            sleep $DELAY
          done

          echo "Health endpoint: $URL_HEALTH" >> $GITHUB_STEP_SUMMARY
          if [ $ok -eq 1 ]; then
            echo "✅ App is awake (200, ok)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ App did not report healthy in time" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
